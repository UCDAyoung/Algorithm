/*
 * 클래스 < 추상클래스 < 인터페이스
 * 우리가 사용하는 클래스에 추상클래스를 상속 (추상메소드를 클래스에 구현한다 )
 * 우리가 사용하는 클래스에 인터페이스를(추상클래스의 틀을 설계한다는 느낌)
 * 
 * 인터페이스와 추상 클래스의 차이점? 
 * 인터페이스는 : 멤버변수 및 생성자가 없고, 오로지 메소드에 대해서만 설계한다.
 * 추상클래스 : 일반메소드, 일반멤버변수 다 가질 수 있다. 여기에 추상메소드들을 추가한 것.
 *  
 * <추상클래스> 
 * 추상 클래스 == 미완성 설계도를 갖고 있는 클래스, 그래서 이 설계도(abstract class)를 받은(extens) 클래스는 설계도를 구체화(override)해줘야함 . 
 * 
 * 어떤 클래스가 추상클래스를 상속 받았는데, 아직 구현하지 않은 메소드가 있다면,이 클래스도 추상클래스가 된다.
 * 추상클래스는 객체 생성 못함.
 * 공통 부분을 뽑아서 추상클래스를 만듬. 
 * 
 * <인터페이스> 
 * 추상 메소드의 집함이다. 추상메소드는? 아직 미완성된 설계도./ 미완성된 설계도를 모아놓는 곳.
 * implements 인터페이스? 라는 말은 인터페이스를 구현한다는 말인데, 즉 추상메소드들을 구현한다는 의미. 
 * 내부에서 구현해주면 된다. 
 * 
 * 예외, 디폴트 메소드, static메소드 
 *  
 * 
 * 
 *
 * 
 */

package 아무거나;

public class 추상클래스_인터페이스 {

	public static void main(String[] args) {
	

	}

}
